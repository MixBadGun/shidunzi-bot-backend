"""ITEM UPGRADE

Revision ID: d47fb98d7383
Revises: 6ed838a3ed0a
Create Date: 2024-10-10 23:12:26.097169

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d47fb98d7383"
down_revision: Union[str, None] = "6ed838a3ed0a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_item_inventory",
        sa.Column("item_id", sa.String(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("uid", sa.Integer(), nullable=True),
        sa.Column("data_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["uid"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("data_id"),
    )
    op.drop_table("catch_cdk_batch_award")
    op.drop_table("catch_cdk")
    op.drop_table("catch_cdk_attempt")
    op.drop_table("catch_cdk_batch")
    op.drop_table("catch_cdk_usage")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_cdk_usage",
        sa.Column("cdk_id", sa.INTEGER(), nullable=True),
        sa.Column("uid", sa.INTEGER(), nullable=True),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(["cdk_id"], ["catch_cdk.data_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["uid"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("data_id"),
    )
    op.create_table(
        "catch_cdk_batch",
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("max_redeem_limit", sa.INTEGER(), nullable=True),
        sa.Column("expiration_date", sa.DATETIME(), nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), nullable=False),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("data_id"),
    )
    op.create_table(
        "catch_cdk_attempt",
        sa.Column("uid", sa.INTEGER(), nullable=True),
        sa.Column("cdkey", sa.VARCHAR(), nullable=False),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["uid"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("data_id"),
    )
    op.create_table(
        "catch_cdk",
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("code", sa.VARCHAR(), nullable=False),
        sa.Column("batch_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["batch_id"],
            ["catch_cdk_batch.data_id"],
            name="fk_catch_cdk_batch_catch_cdk",
        ),
        sa.PrimaryKeyConstraint("data_id"),
        sa.UniqueConstraint("code", name="uq_catch_cdk_code"),
    )
    op.create_table(
        "catch_cdk_batch_award",
        sa.Column("batch_id", sa.INTEGER(), nullable=True),
        sa.Column("aid", sa.INTEGER(), nullable=True),
        sa.Column("sid", sa.INTEGER(), nullable=True),
        sa.Column("chips", sa.INTEGER(), nullable=True),
        sa.Column("quantity", sa.INTEGER(), nullable=False),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(["aid"], ["catch_award.data_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["batch_id"], ["catch_cdk_batch.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["sid"], ["catch_skin.data_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("data_id"),
    )
    op.drop_table("catch_item_inventory")
    # ### end Alembic commands ###
