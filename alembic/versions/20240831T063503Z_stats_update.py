"""stats update

Revision ID: 20240831T063503Z
Revises: 20240813T045654Z
Create Date: 2024-08-31 14:35:10.671430

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "20240831T063503Z"
down_revision: Union[str, None] = "20240813T045654Z"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_stat",
        sa.Column("stat_from", sa.Integer(), nullable=True),
        sa.Column("stat_type", sa.String(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("linked_uid", sa.Integer(), nullable=True),
        sa.Column("linked_aid", sa.Integer(), nullable=True),
        sa.Column("linked_sid", sa.Integer(), nullable=True),
        sa.Column("linked_pid", sa.Integer(), nullable=True),
        sa.Column("linked_rid", sa.Integer(), nullable=True),
        sa.Column("linked_upid", sa.Integer(), nullable=True),
        sa.Column("data_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["linked_aid"], ["catch_award.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["linked_rid"], ["catch_recipe.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["linked_sid"], ["catch_skin.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["linked_uid"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["linked_upid"], ["catch_up_pool.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["stat_from"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("data_id"),
    )
    with op.batch_alter_table("catch_stat", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_catch_stat_stat_from"), ["stat_from"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_catch_stat_stat_type"), ["stat_type"], unique=False
        )

    with op.batch_alter_table("catch_recipe_history", schema=None) as batch_op:
        batch_op.drop_index("ix_catch_recipe_history_recipe")
        batch_op.drop_index("ix_catch_recipe_history_source")

    op.drop_table("catch_recipe_history")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_recipe_history",
        sa.Column("source", sa.VARCHAR(), nullable=False),
        sa.Column("recipe", sa.INTEGER(), nullable=True),
        sa.Column("first", sa.INTEGER(), nullable=True),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["first"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["recipe"], ["catch_recipe.data_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("data_id"),
    )
    with op.batch_alter_table("catch_recipe_history", schema=None) as batch_op:
        batch_op.create_index(
            "ix_catch_recipe_history_source", ["source"], unique=False
        )
        batch_op.create_index(
            "ix_catch_recipe_history_recipe", ["recipe"], unique=False
        )

    with op.batch_alter_table("catch_stat", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_catch_stat_stat_type"))
        batch_op.drop_index(batch_op.f("ix_catch_stat_stat_from"))

    op.drop_table("catch_stat")
    # ### end Alembic commands ###
