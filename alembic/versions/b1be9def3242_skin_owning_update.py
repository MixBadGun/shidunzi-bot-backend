"""skin owning update

迁移 ID: b1be9def3242
父迁移: 37178274c484
创建时间: 2024-06-08 23:16:20.604915

"""

from __future__ import annotations

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


revision: str = "b1be9def3242"
down_revision: str | Sequence[str] | None = "37178274c484"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_skin_own_record",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("skin_id", sa.Integer(), nullable=True),
        sa.Column("data_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["skin_id"],
            ["catch_skin.data_id"],
            name=op.f("fk_catch_skin_own_record_skin_id_catch_skin"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["catch_user_data.data_id"],
            name=op.f("fk_catch_skin_own_record_user_id_catch_user_data"),
        ),
        sa.PrimaryKeyConstraint("data_id", name=op.f("pk_catch_skin_own_record")),
        info={"bind_key": "catch"},
    )
    with op.batch_alter_table("catch_skin_own_record", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_catch_skin_own_record_updated_at"),
            ["updated_at"],
            unique=False,
        )

    with op.batch_alter_table("catch_skin", schema=None) as batch_op:
        batch_op.add_column(sa.Column("name", sa.String(), nullable=False))

    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("catch_skin", schema=None) as batch_op:
        batch_op.drop_column("name")

    with op.batch_alter_table("catch_skin_own_record", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_catch_skin_own_record_updated_at"))

    op.drop_table("catch_skin_own_record")
    # ### end Alembic commands ###
