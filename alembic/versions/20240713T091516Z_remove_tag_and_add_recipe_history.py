"""remove tag and add recipe history

Revision ID: 20240713T091516Z
Revises: 20240711T060459Z
Create Date: 2024-07-13 17:15:19.816979

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "20240713T091516Z"
down_revision: Union[str, None] = "20240711T060459Z"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_recipe_history",
        sa.Column("source", sa.String(), nullable=False),
        sa.Column("recipe", sa.Integer(), nullable=True),
        sa.Column("first", sa.Integer(), nullable=True),
        sa.Column("data_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["first"], ["catch_user_data.data_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["recipe"], ["catch_recipe.data_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("data_id"),
    )
    op.drop_table("catch_skin_tag_relation")
    op.drop_table("catch_award_tag_relation")
    op.drop_table("catch_tag")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_tag",
        sa.Column("tag_name", sa.VARCHAR(), nullable=False),
        sa.Column("tag_args", sa.VARCHAR(), nullable=False),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("data_id", name="pk_catch_tag"),
    )
    op.create_table(
        "catch_award_tag_relation",
        sa.Column("award_id", sa.INTEGER(), nullable=True),
        sa.Column("tag_id", sa.INTEGER(), nullable=True),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["award_id"],
            ["catch_award.data_id"],
            name="fk_catch_award_tag_relation_award_id_catch_award",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["catch_tag.data_id"],
            name="fk_catch_award_tag_relation_tag_id_catch_tag",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("data_id", name="pk_catch_award_tag_relation"),
    )
    op.create_table(
        "catch_skin_tag_relation",
        sa.Column("skin_id", sa.INTEGER(), nullable=True),
        sa.Column("tag_id", sa.INTEGER(), nullable=True),
        sa.Column("data_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["skin_id"],
            ["catch_skin.data_id"],
            name="fk_catch_skin_tag_relation_skin_id_catch_skin",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["catch_tag.data_id"],
            name="fk_catch_skin_tag_relation_tag_id_catch_tag",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("data_id", name="pk_catch_skin_tag_relation"),
    )
    op.drop_table("catch_recipe_history")
    # ### end Alembic commands ###
