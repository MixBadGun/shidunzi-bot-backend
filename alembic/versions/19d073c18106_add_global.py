"""add global

迁移 ID: 19d073c18106
父迁移: b1be9def3242
创建时间: 2024-06-09 16:52:59.328261

"""

from __future__ import annotations

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


revision: str = "19d073c18106"
down_revision: str | Sequence[str] | None = "b1be9def3242"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catch_global",
        sa.Column("catch_interval", sa.Float(), nullable=False),
        sa.Column("data_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("data_id", name=op.f("pk_catch_global")),
        info={"bind_key": "catch"},
    )
    with op.batch_alter_table("catch_global", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_catch_global_updated_at"), ["updated_at"], unique=False
        )

    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("catch_global", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_catch_global_updated_at"))

    op.drop_table("catch_global")
    # ### end Alembic commands ###
